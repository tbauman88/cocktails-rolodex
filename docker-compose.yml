version: '3.9'

services:
  db:
    image: postgres:13
    container_name: cocktails-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data

  db_test:
    image: postgres:13
    container_name: cocktails-db-testing
    env_file:
      - .env.example
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5434:5432'
    volumes:
      - postgres_test:/var/lib/postgresql/data

  api:
    image: api
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/cocktails?schema=public
    ports:
      - '3333:3333'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./node_modules:/app/node_modules
      - ./dist/apps/api:/app/api

  client:
    image: client
    env_file:
      - .env
    environment:
      NODE_ENV: 'development'
    ports:
      - '4200:4200'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./node_modules:/app/node_modules
      - ./dist/apps/client:/app/client

networks:
  cocktails:

volumes:
  postgres:
  postgres_test:
